## Disable serial and UART interface.
# CONFIG_SERIAL=n
CONFIG_UART_CONSOLE=y

CONFIG_LOG=n
CONFIG_PRINTK=n

CONFIG_HEAP_MEM_POOL_SIZE=8192

CONFIG_MAIN_STACK_SIZE=2048
CONFIG_SYSTEM_WORKQUEUE_STACK_SIZE=2048
CONFIG_BT=y
CONFIG_BT_HCI_RAW=y
CONFIG_BT_MAX_CONN=16
CONFIG_BT_CTLR_ASSERT_HANDLER=y
CONFIG_BT_HCI_RAW_RESERVE=1

CONFIG_ASSERT=n
CONFIG_ASSERT_VERBOSE=n
CONFIG_DEBUG_INFO=n
CONFIG_EXCEPTION_STACK_TRACE=n

CONFIG_NRF_802154_SER_RADIO=y
CONFIG_NRF_RTC_TIMER_USER_CHAN_COUNT=2

CONFIG_TRACING=y
CONFIG_TRACING_CTF=y
CONFIG_TRACING_BUFFER_SIZE=4096
CONFIG_TRACING_THREAD_WAIT_THRESHOLD=10
CONFIG_BOOT_BANNER=n

# Use the scripts in zephyr/scripts/tracing to capture traces from UART and
# analyze them. Don't forget to flush UART before using the capture script, as
# any other output than the binary trace format makes the tools barf.
#
# 1. recover the board
# 2. flush uart: cat /dev/ttyACMX
# 3. run capture script: trace_capture_uart.py -d /dev/ttyACMX -b 115200
# 4. copy over metadata (see parse_ctf.py)
# 5. use tracecompass or parse_ctf.py to analyze trace
